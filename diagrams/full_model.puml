@startuml
!define DARKGREEN
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml

skinparam {
    Shadowing false
    Dpi 300
    ' classFontSize 40
    ' classAttributeFontSize 35
    ' PackageFontSize 50
    ' classAttributeFontStyle "Regular"
    ' classAttributeFontName  "Gill Sans"
    ' ClassAttributeFontColor red
}

class index{
    ..libraries..
    const express = require('express');
    const Handlebars = require('handlebars');
    const path = require('path');
    const csrf = require('csurf');
    const flash = require('connect-flash');
    const mongoose = require('mongoose');
    const helmet = require('helmet');
    const compression = require('compression');
    const exphbs = require('express-handlebars');
    const svgFallback = require('express-svg-fallback');
    const {allowInsecurePrototypeAccess} = require('@handlebars/allow-prototype-access');
    const session = require('express-session');
    const MongoStore = require('connect-mongodb-session')(session);

    ..routes..
    const homeRoutes = require('./routes/home');
    const cardRoutes = require('./routes/card');
    const addRouters = require('./routes/add');
    const ordersRoutes = require('./routes/orders');
    const coursesRotes = require('./routes/courses');
    const authRoutes = require('./routes/auth');
    const profileRoutes = require('./routes/profile');

    ..middleware..
    const warMiddleware = require('./middleware/variables');
    const userMiddleware = require('./middleware/user');
    const errorHandler = require('./middleware/error');
    const fileMiddleware = require('./middleware/file');

    ..keys..
    const keys = require('./keys');

    ..port run the application..
    const PORT = process.env.PORT || 3000;

    ..function..
    const app = express();
    const hbs = exphbs.create({})
    const store = new MongoStore({})
    app.engine()
    app.set()
    app.use(express.static(());
    app.use(express.urlencoded({}));
    app.use(session({})
    app.use(fileMiddleware.single('avatar'));
    app.use(csrf());
    app.use(flash());
    app.use(helmet());
    app.use(compression());
    app.use(
    svgFallback({})
    app.use(warMiddleware);
    app.use(userMiddleware);

    app.use('/', homeRoutes);
    app.use('/add', addRouters);
    app.use('/courses', coursesRotes);
    app.use('/card', cardRoutes);
    app.use('/orders', ordersRoutes);
    app.use('/auth', authRoutes);
    app.use('/profile', profileRoutes);

    async function start(){}
    app.listen(PORT, () => {}

    app.use(errorHandler);

    start();
}

package routes{
     class add{}
     class cart{}
     class courses{}
     class orders{}
     class prise{}
     class profile{}
     class registration{}
}

package "utils" #gray{

    class hbsHelpers{
        ..modules..
        module.exports = {}
        ifeq(a, b, options){}
    }
}


index *-- hbsHelpers
index *-down- routes

@enduml