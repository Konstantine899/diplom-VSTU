@startuml
!define DARKGREEN
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml
skinparam {
    Shadowing false
    Dpi 300
    ' classFontSize 40
    ' classAttributeFontSize 35
    ' PackageFontSize 50
    ' classAttributeFontStyle "Regular"
    ' classAttributeFontName  "Gill Sans"
    ' ClassAttributeFontColor red
}

package "routes" #gray{
    class orders{
        ..libraries..
        const { Router } = require('express');
        ..models..
        Order
        ..middleware..
        auth
        ..auth..
        router.get('/', auth, async (req, res) => {}
        const orders = await Order.find({ 'user.userId': req.user._id }).populate(
        'user.userId'
        res.render('orders', {}
        router.post('/', auth, async (req, res) => {}
        const user = await req.user.populate('cart.items.courseId').execPopulate();
        const courses = user.cart.items.map((i) => ({})

        const order = new Order({})
        await order.save();
        await req.user.clearCart();
        res.redirect('/orders');
    }
}

package "models" #gray{
    class order {
        ..libraries..
        const { Schema, model } = require('mongoose');
        ....
        const orderSchema = new Schema({})
        course: object
        count: number
        user: {}
        name: String
        userId:Schema.Types.ObjectId
        ref: User

        date:{}
        type: Date
        default: Date.now
    }
}
package "middleware" #gray{
    class auth{
        ..modules..
        module.exports = function (req, res, next)
        if (!req.session.isAuthenticated)
            return res.redirect('/auth/login')
        }
    }

    order --> orders
    auth --> orders

    @enduml